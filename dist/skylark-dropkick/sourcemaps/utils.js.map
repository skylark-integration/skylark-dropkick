{"version":3,"sources":["utils.js"],"names":["define","isIE","navigator","appVersion","indexOf","[object Object]","elem","classname","reg","RegExp","test","className","this","hasClass","replace","obj","Array","prototype","slice","call","arguments","forEach","source","prop","box","getBoundingClientRect","top","left","docElem","document","documentElement","offsetTop","scrollTop","window","pageYOffset","offsetLeft","scrollLeft","pageXOffset","clientTop","clientLeft","relative","pos","parentNode","child","ancestor","name","attrs","a","node","createElement","hasOwnProperty","innerHTML","setAttribute","deferred","fn","setTimeout","apply"],"mappings":";;;;;;;AAAAA,UAAU,WACR,MAAMC,GAA+C,IAAxCC,UAAUC,WAAWC,QAAQ,QAsG1C,OApGEC,SAAUC,EAAMC,GACd,IAAIC,EAAM,IAAIC,OAAQ,WAAaF,EAAY,YAE/C,OAAOD,GAAQE,EAAIE,KAAMJ,EAAKK,YAGhCN,SAAUC,EAAMC,GACVD,IAASM,KAAKC,SAAUP,EAAMC,KAChCD,EAAKK,WAAa,IAAMJ,IAI5BF,YAAaC,EAAMC,GACjB,IAAIC,EAAM,IAAIC,OAAQ,WAAaF,EAAY,YAE/CD,IAAUA,EAAKK,UAAYL,EAAKK,UAAUG,QAASN,EAAK,OAG1DH,YAAaC,EAAMC,GAGjBK,MAFSA,KAAKC,SAAUP,EAAMC,GAAc,SAAW,OAE5C,SAAWD,EAAMC,IAI9BF,OAAQU,GAON,OANAC,MAAMC,UAAUC,MAAMC,KAAMC,UAAW,GAAIC,QAAS,SAAUC,GAC5D,GAAKA,EACH,IAAM,IAAIC,KAAQD,EAASP,EAAKQ,GAASD,EAAQC,KAI9CR,GAITV,OAAQC,GACN,IAAIkB,EAAMlB,EAAKmB,0BAA6BC,IAAK,EAAGC,KAAM,GACtDC,EAAUC,SAASC,gBACnBC,EAAY9B,EAAO2B,EAAQI,UAAYC,OAAOC,YAC9CC,EAAalC,EAAO2B,EAAQQ,WAAaH,OAAOI,YAEpD,OACEX,IAAKF,EAAIE,IAAMK,EAAYH,EAAQU,UACnCX,KAAMH,EAAIG,KAAOQ,EAAaP,EAAQW,aAK1ClC,SAAUC,EAAMkC,GACd,IAAIC,GAAQf,IAAK,EAAGC,KAAM,GAE1B,KAAQrB,GAAQA,IAASkC,GACvBC,EAAIf,KAAOpB,EAAKyB,UAChBU,EAAId,MAAQrB,EAAK6B,WACjB7B,EAAOA,EAAKoC,WAGd,OAAOD,GAITpC,QAASsC,EAAOC,GACd,KAAQD,GAAQ,CACd,GAAKA,IAAUC,EAAa,OAAOD,EACnCA,EAAQA,EAAMD,WAGhB,OAAO,GAITrC,OAAQwC,EAAMC,GACZ,IAAIC,EACAC,EAAOnB,SAASoB,cAAeJ,GAInC,IAAME,KAFAD,IAAUA,MAELA,EACJA,EAAMI,eAAgBH,KACd,cAANA,EACHC,EAAKG,UAAYL,EAAOC,GAExBC,EAAKI,aAAcL,EAAGD,EAAOC,KAKnC,OAAOC,GAGTK,SAAUC,IACD,WACLrB,OAAOsB,WAAW,KAChBD,EAAGE,MAAM5C,KAAMQ,YACd","file":"../utils.js","sourcesContent":["define([],function(){\n  const isIE = navigator.appVersion.indexOf(\"MSIE\")!==-1;\n  const Utils = {\n    hasClass( elem, classname ) {\n      let reg = new RegExp( \"(^|\\\\s+)\" + classname + \"(\\\\s+|$)\" );\n\n      return elem && reg.test( elem.className );\n    },\n\n    addClass( elem, classname ) {\n      if( elem && !this.hasClass( elem, classname ) ) {\n        elem.className += \" \" + classname;\n      }\n    },\n\n    removeClass( elem, classname ) {\n      let reg = new RegExp( \"(^|\\\\s+)\" + classname + \"(\\\\s+|$)\" );\n\n      elem && ( elem.className = elem.className.replace( reg, \" \" ) );\n    },\n\n    toggleClass( elem, classname ) {\n      let fn = this.hasClass( elem, classname ) ? \"remove\" : \"add\";\n\n      this[ fn + \"Class\" ]( elem, classname );\n    },\n\n    // Shallow object extend\n    extend( obj ) {\n      Array.prototype.slice.call( arguments, 1 ).forEach( function( source ) {\n        if ( source ) {\n          for ( let prop in source ) obj[ prop ] = source[ prop ];\n        }\n      });\n\n      return obj;\n    },\n\n    // Returns the top and left offset of an element\n    offset( elem ) {\n      let box = elem.getBoundingClientRect() || { top: 0, left: 0 };\n      let docElem = document.documentElement;\n      let offsetTop = isIE ? docElem.scrollTop : window.pageYOffset;\n      let offsetLeft = isIE ? docElem.scrollLeft : window.pageXOffset;\n\n      return {\n        top: box.top + offsetTop - docElem.clientTop,\n        left: box.left + offsetLeft - docElem.clientLeft\n      };\n    },\n\n    // Returns the top and left position of an element relative to an ancestor\n    position( elem, relative ) {\n      let pos = { top: 0, left: 0 };\n\n      while ( elem && elem !== relative ) {\n        pos.top += elem.offsetTop;\n        pos.left += elem.offsetLeft;\n        elem = elem.parentNode;\n      }\n\n      return pos;\n    },\n\n    // Returns the closest ancestor element of the child or false if not found\n    closest( child, ancestor ) {\n      while ( child ) {\n        if ( child === ancestor ) { return child; }\n        child = child.parentNode;\n      }\n\n      return false;\n    },\n\n    // Creates a DOM node with the specified attributes\n    create( name, attrs ) {\n      let a;\n      let node = document.createElement( name );\n\n      if ( !attrs ) { attrs = {}; }\n\n      for ( a in attrs ) {\n        if ( attrs.hasOwnProperty( a ) ) {\n          if ( a === \"innerHTML\" ) {\n            node.innerHTML = attrs[ a ];\n          } else {\n            node.setAttribute( a, attrs[ a ] );\n          }\n        }\n      }\n\n      return node;\n    },\n\n    deferred( fn ) {\n      return function() {\n        window.setTimeout(() => {\n          fn.apply(this, arguments);\n        }, 1);\n      };\n    }\n  };\n\n  return Utils;\n});\n"]}